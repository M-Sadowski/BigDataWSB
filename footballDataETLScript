import pandas as pd

# zaladowanie danych i utworzenie DataFrame
results = pd.read_csv(r"/Users/michal/Desktop/footballData/results_noisy.csv")
results = pd.DataFrame(results)

# normalizacja daty
def normalize_date(value):
    try:
        # Próbujemy przekonwertować na datetime
        return pd.to_datetime(value, errors='coerce')  # Umożliwia różne formaty
    except ValueError:
        return None  # W przypadku błędu zwracamy None

# przygotowanie danych do tabeli date
results['date'] = results['date'].apply(normalize_date)
results['year'] = results['date'].dt.year
results['month'] = results['date'].dt.month
results['day'] = results['date'].dt.day
results['day_of_week'] = results['date'].dt.day_name()

# tworzenie tabeli results
results = results[['date', 'year', 'month', 'day', 'day_of_week', 'home_team', 'away_team', 'home_score', 'away_score', 'tournament', 'city' , 'country', 'neutral']]
results = results.dropna()
# indeksowanie tabeli results
results.insert(0, 'matchId', ['M' + str(i) for i in range(1, len(results) + 1)])
# tworzenie tabeli dates
dates = results[['date', 'year', 'month', 'day', 'day_of_week']]
dates = dates.drop_duplicates()

#ekstrakcja tabeli location
locations = results[['country', 'city']].drop_duplicates().reset_index(drop=True)
locations.insert(0, 'locationId', ['L' + str(i) for i in range(1, len(locations) + 1)])

#ekstrakcja tabeli teams
teams = pd.DataFrame()
teams.insert(0, 'team', pd.concat([results['home_team'], results['away_team']]).drop_duplicates().reset_index(drop=True))
teams.insert(0, 'teamId', ['NT' + str(i) for i in range(1, len(teams) + 1)])

#ekstrakcja tabeli tournaments
tournaments = pd.DataFrame()
tournaments.insert(0, 'tournament', results['tournament'].drop_duplicates().reset_index(drop=True))
tournaments.insert(0, 'tournamentId', ['T' + str(i) for i in range(1, len(tournaments) + 1)])

#tworzenie tabeli faktów results
results = results.merge(teams, left_on='home_team', right_on='team', how='left') \
                 .rename(columns={'teamId': 'homeTeamId', 'home_score': 'homeScore', 'away_score': 'awayScore'}).drop(['home_team', 'team'], axis=1)

results = results.merge(teams, left_on='away_team', right_on='team', how='left') \
                 .rename(columns={'teamId': 'awayTeamId'}).drop(['away_team', 'team'], axis=1)

results = results.merge(locations, left_on=['country', 'city'], right_on=['country', 'city'], how='left') \
                 .rename(columns={'locationId': 'locationId'}).drop(['country', 'city'], axis=1)

results = results.merge(tournaments, left_on='tournament', right_on='tournament', how='left') \
                 .rename(columns={'tournamentId': 'tournamentId'}).drop(['tournament'], axis=1)

results = results[['matchId', 'homeTeamId', 'awayTeamId', 'homeScore', 'awayScore', 'locationId', 'neutral', 'tournamentId']]
results['homeScore'] = results['homeScore'].astype(int)
results['awayScore'] = results['awayScore'].astype(int)
print(results)
